{"ast":null,"code":"import * as yup from \"yup\"; // const passwordRules = /^(?==.*\\d)(?=.*[a-z])(?=.*{A-Z}).{5,}$/;\n\nexport const basicSchema = yup.object().shape({\n  username: yup.string().min(2, \"Mininum 2 characters\").max(30, \"Maximum 30 characters\").required(\"Required\"),\n  mail: yup.string().email(\"Please enter valid email \").required(\"Required\"),\n  password: yup.string().min(8) // .minLowercase(1, \"password must contain at least 1 lower case letter\")\n  // .minUppercase(1, \"password must contain at least 1 upper case letter\")\n  // .minNumbers(1, \"password must contain at least 1 number\")\n  // .minSymbols(1, \"password must contain at least 1 special character\")\n  .matches(passwordRules, {\n    message: \"Please enter a stronger password\"\n  }).required(\"Required\"),\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Password must match\").required(\"Required\")\n});","map":{"version":3,"sources":["C:/Users/DELL/Desktop/vscode/programs/c.c/codes/client/src/schemas/index.js"],"names":["yup","basicSchema","object","shape","username","string","min","max","required","mail","email","password","matches","passwordRules","message","confirmPassword","oneOf","ref"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB,C,CACA;;AACA,OAAO,MAAMC,WAAW,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC5CC,EAAAA,QAAQ,EAAEJ,GAAG,CACVK,MADO,GAEPC,GAFO,CAEH,CAFG,EAEA,sBAFA,EAGPC,GAHO,CAGH,EAHG,EAGC,uBAHD,EAIPC,QAJO,CAIE,UAJF,CADkC;AAM5CC,EAAAA,IAAI,EAAET,GAAG,CAACK,MAAJ,GAAaK,KAAb,CAAmB,2BAAnB,EAAgDF,QAAhD,CAAyD,UAAzD,CANsC;AAO5CG,EAAAA,QAAQ,EAAEX,GAAG,CACVK,MADO,GAEPC,GAFO,CAEH,CAFG,EAGR;AACA;AACA;AACA;AANQ,GAOPM,OAPO,CAOCC,aAPD,EAOgB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAPhB,EAQPN,QARO,CAQE,UARF,CAPkC;AAgB5CO,EAAAA,eAAe,EAAEf,GAAG,CACjBK,MADc,GAEdW,KAFc,CAER,CAAChB,GAAG,CAACiB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFQ,EAEqB,qBAFrB,EAGdT,QAHc,CAGL,UAHK;AAhB2B,CAAnB,CAApB","sourcesContent":["import * as yup from \"yup\";\r\n// const passwordRules = /^(?==.*\\d)(?=.*[a-z])(?=.*{A-Z}).{5,}$/;\r\nexport const basicSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .min(2, \"Mininum 2 characters\")\r\n    .max(30, \"Maximum 30 characters\")\r\n    .required(\"Required\"),\r\n  mail: yup.string().email(\"Please enter valid email \").required(\"Required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8)\r\n    // .minLowercase(1, \"password must contain at least 1 lower case letter\")\r\n    // .minUppercase(1, \"password must contain at least 1 upper case letter\")\r\n    // .minNumbers(1, \"password must contain at least 1 number\")\r\n    // .minSymbols(1, \"password must contain at least 1 special character\")\r\n    .matches(passwordRules, { message: \"Please enter a stronger password\" })\r\n    .required(\"Required\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Password must match\")\r\n    .required(\"Required\"),\r\n});\r\n"]},"metadata":{},"sourceType":"module"}