{"ast":null,"code":"import * as yup from \"yup\";\nconst passwordRules = /^(?==.*\\d)|(?=.*[a-z])|(?=.*{A-Z}).{5,}$/;\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const basicSchema = yup.object().shape({\n  username: yup.string().min(4, \"Mininum 2 characters\") // .max(30, \"Maximum 30 characters\")\n  .required(\"Required\"),\n  mail: yup.string().email(\"Please enter valid email \").required(\"Required\"),\n  password: yup.string().min(8).matches(passwordRules, {\n    message: \"Please enter a stronger password\"\n  }).required(\"Required\"),\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Password must match\").required(\"Required\"),\n  donatorType: yup.string().oneOf([\"Organisation\", \"Individual\", \"Others\"], \"Invalid Donator Type\"),\n  contactNumber: yup.string().matches(phoneRegExp, \"Phone Number is not Valid\").min(10, \"Too Short\").max(10, \"Too Long\"),\n  termcondition\n});","map":{"version":3,"sources":["C:/Users/DELL/Desktop/vscode/programs/c.c/codes/client/src/schemas/index.js"],"names":["yup","passwordRules","phoneRegExp","basicSchema","object","shape","username","string","min","required","mail","email","password","matches","message","confirmPassword","oneOf","ref","donatorType","contactNumber","max","termcondition"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,MAAMC,aAAa,GAAG,0CAAtB;AACA,MAAMC,WAAW,GAAG,yGAApB;AACA,OAAO,MAAMC,WAAW,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AAC5CC,EAAAA,QAAQ,EAAEN,GAAG,CACVO,MADO,GAEPC,GAFO,CAEH,CAFG,EAEA,sBAFA,EAGR;AAHQ,GAIPC,QAJO,CAIE,UAJF,CADkC;AAM5CC,EAAAA,IAAI,EAAEV,GAAG,CAACO,MAAJ,GAAaI,KAAb,CAAmB,2BAAnB,EAAgDF,QAAhD,CAAyD,UAAzD,CANsC;AAO5CG,EAAAA,QAAQ,EAAEZ,GAAG,CACVO,MADO,GAEPC,GAFO,CAEH,CAFG,EAGPK,OAHO,CAGCZ,aAHD,EAGgB;AAAEa,IAAAA,OAAO,EAAE;AAAX,GAHhB,EAIPL,QAJO,CAIE,UAJF,CAPkC;AAY5CM,EAAAA,eAAe,EAAEf,GAAG,CACjBO,MADc,GAEdS,KAFc,CAER,CAAChB,GAAG,CAACiB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFQ,EAEqB,qBAFrB,EAGdR,QAHc,CAGL,UAHK,CAZ2B;AAgB5CS,EAAAA,WAAW,EAAElB,GAAG,CAACO,MAAJ,GAAaS,KAAb,CAAmB,CAAC,cAAD,EAAiB,YAAjB,EAA+B,QAA/B,CAAnB,EAA6D,sBAA7D,CAhB+B;AAiB5CG,EAAAA,aAAa,EAAEnB,GAAG,CACfO,MADY,GAEZM,OAFY,CAEJX,WAFI,EAES,2BAFT,EAGZM,GAHY,CAGR,EAHQ,EAGJ,WAHI,EAIZY,GAJY,CAIR,EAJQ,EAIJ,UAJI,CAjB6B;AAsB1CC,EAAAA;AAtB0C,CAAnB,CAApB","sourcesContent":["import * as yup from \"yup\";\r\nconst passwordRules = /^(?==.*\\d)|(?=.*[a-z])|(?=.*{A-Z}).{5,}$/;\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nexport const basicSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .min(4, \"Mininum 2 characters\")\r\n    // .max(30, \"Maximum 30 characters\")\r\n    .required(\"Required\"),\r\n  mail: yup.string().email(\"Please enter valid email \").required(\"Required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8)\r\n    .matches(passwordRules, { message: \"Please enter a stronger password\" })\r\n    .required(\"Required\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Password must match\")\r\n    .required(\"Required\"),\r\n  donatorType: yup.string().oneOf([\"Organisation\", \"Individual\", \"Others\"], \"Invalid Donator Type\"),\r\n  contactNumber: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone Number is not Valid\")\r\n    .min(10, \"Too Short\")\r\n    .max(10, \"Too Long\"),\r\n    termcondition\r\n});\r\n"]},"metadata":{},"sourceType":"module"}